bwt.test <- t.test(sample.bwt.nonsmoke,sample.bwt.smoke)
} return (bwt.test$conf.int[2] - bwt.test$conf.int[1])
N=30
conf.int<-function(){
sample.bwt.nonsmoke <- sample(bwt.nonsmoke,N)
sample.bwt.smoke <- sample(bwt.smoke,N)
bwt.test <- t.test(sample.bwt.nonsmoke,sample.bwt.smoke)
} return (bwt.test$conf.int[2] - bwt.test$conf.int[1])
mean(replicate(1000, conf.int()))
babies =
read.table("https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt",
header=TRUE)
bwt.nonsmoke = babies$bwt[babies$smoke==0]
bwt.smoke = babies$bwt[babies$smoke==1]
t.test(bwt.nonsmoke, bwt.smoke)
sample <- t.test(bwt.nonsmoke, bwt.smoke)
sample$p.value
sample$conf.int
N=30
conf.int<-function(){
sample.bwt.nonsmoke <- sample(bwt.nonsmoke,N)
sample.bwt.smoke <- sample(bwt.smoke,N)
bwt.test <- t.test(sample.bwt.nonsmoke,sample.bwt.smoke)
} return (bwt.test$conf.int[2] - bwt.test$conf.int[1])
mean(replicate(1000, conf.int()))
sample$conf.int
mean(replicate(1000, conf.int()))
N=30
conf.int<-function(){
sample.bwt.nonsmoke <- sample(bwt.nonsmoke,N)
sample.bwt.smoke <- sample(bwt.smoke,N)
bwt.test <- t.test(sample.bwt.nonsmoke,sample.bwt.smoke)
}
mean(replicate(1000, conf.int()))
return (bwt.test$conf.int[2] - bwt.test$conf.int[1])
babies = read.table("babies.txt", header=TRUE)
bwt.nonsmoke = babies$bwt[babies$smoke==0]
bwt.smoke = babies$bwt[babies$smoke==1]
N=30
conf.int<-function(){
sample.bwt.nonsmoke <- sample(bwt.nonsmoke,N)
sample.bwt.smoke <- sample(bwt.smoke,N)
bwt.test <- t.test(sample.bwt.nonsmoke,sample.bwt.smoke)
} return (bwt.test$conf.int[2] - bwt.test$conf.int[1])
conf.int<-function(){
sample.bwt.nonsmoke <- sample(bwt.nonsmoke,N)
sample.bwt.smoke <- sample(bwt.smoke,N)
bwt.test <- t.test(sample.bwt.nonsmoke,sample.bwt.smoke)
}
mean(replicate(1000, conf.int()))
return (bwt.test$conf.int[2] - bwt.test$conf.int[1])
sample.bwt.nonsmoke <- sample(bwt.nonsmoke,N)
sample.bwt.smoke <- sample(bwt.smoke,N)
bwt.test <- t.test(sample.bwt.nonsmoke,sample.bwt.smoke)
return (bwt.test$conf.int[2] - bwt.test$conf.int[1])
(bwt.test$conf.int[2] - bwt.test$conf.int[1])
mean(replicate(1000, conf.int()))
babies = read.table("babies.txt", header=TRUE)
bwt.nonsmoke = babies$bwt[babies$smoke==0]
bwt.smoke = babies$bwt[babies$smoke==1]
N=30
conf.int<-function(){
sample.bwt.nonsmoke <- sample(bwt.nonsmoke,N)
sample.bwt.smoke <- sample(bwt.smoke,N)
bwt.test <- t.test(sample.bwt.nonsmoke,sample.bwt.smoke)
return (bwt.test$conf.int[2] - bwt.test$conf.int[1])
}
mean(replicate(1000, conf.int()))
popdiff = mean(bwt.nonsmoke) - mean(bwt.smoke)
N=30
diff.compare<-function(){
sample.bwt.nonsmoke <- sample(bwt.nonsmoke,N)
sample.bwt.smoke <- sample(bwt.smoke,N)
bwt.test <- t.test(sample.bwt.nonsmoke,sample.bwt.smoke)
return (popdiff>bwt.test$conf.int[1] & popdiff<bwt.test$conf.int[2])
}
mean(replicate(1000, diff.compare()))
N=15
reject <- function(N,alpha){
sample.bwt.nonsmoke <- sample(bwt.nonsmoke,N)
sample.bwt.smoke <- sample(bwt.smoke,N)
pval <- t.test(sample.bwt.nonsmoke,sample.bwt.smoke)$p.value
ifelse(pval < alpha,1,0)
}
mean(replicate(1000,reject(N,0.1)))
mean(replicate(1000,reject(N,0.05)))
mean(replicate(1000,reject(N,0.01)))
op.var = var(bwt.nonsmoke)
vars = replicate(1000, var(sample(bwt.nonsmoke,10)))
mean(vars > pop.var*1.5)
pop.var = var(bwt.nonsmoke)
vars = replicate(1000, var(sample(bwt.nonsmoke,10)))
mean(vars > pop.var*1.5)
mean(replicate(1000, conf.int()))
N=30
conf.int<-function(){
sample.bwt.nonsmoke <- sample(bwt.nonsmoke,N)
sample.bwt.smoke <- sample(bwt.smoke,N)
bwt.test <- t.test(sample.bwt.nonsmoke,sample.bwt.smoke)
return (bwt.test$conf.int[2] - bwt.test$conf.int[1])
}
mean(replicate(1000, conf.int()))
babies = read.table("https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt", header=TRUE)
babies = read.table("babies.txt", header=TRUE)
bwt.nonsmoke = babies$bwt[babies$smoke==0]
bwt.smoke = babies$bwt[babies$smoke==1]
pop.var = var(bwt.nonsmoke)
vars = replicate(1000, var(sample(bwt.nonsmoke,10)))
mean(vars > pop.var*1.5)
vars = replicate(1000, var(sample(bwt.nonsmoke,50)))
mean(vars > pop.var*1.5)
sample.size = 2:400
var.estimate = sapply(sample.size, function(n) var(sample(bwt.nonsmoke, n)))
plot(sample.size, var.estimate)
abline(h=pop.var, col="blue")
set.seed(0)
N=50
smokers <- sample(babies$bwt[babies$smoke==1],N)
nonsmokers <- sample(babies$bwt[babies$smoke==0],N)
obs <- mean(smokers)-mean(nonsmokers)
avgdiff <- replicate(1000, {
all <- sample(c(smokers,nonsmokers))
smokersstar <- all[1:N]
nonsmokersstar <- all[(N+1):(2*N)]
return(mean(smokersstar) - mean(nonsmokersstar))
})
mean(abs(avgdiff) > abs(obs))
load(url("http://courses.edx.org/c4x/HarvardX/PH525.1x/asset/skew.RData"))
load("~/Downloads/skew.RData")
par(mfrow = c(3,3))
for (i in 1:9) {
qqnorm(dat[,i],main=i)
}
par(mfrow=c(1,1))
install.packages("UsingR")
library(UsingR)
data(father.son)
x = father.son$fheight
y = father.son$sheight
n = nrow(father.son)
mean(scale(x) * scale(y))
data(nym.2002)
n = nrow(nym.2002)
time = sort(nym.2002$time)
min(time/median(time))
max(time/median(time))
data(ChickWeight)
data(ChickWeight)
chick = reshape(ChickWeight,idvar=c("Chick","Diet"),timevar="Time",direction="wide")
chick = na.omit(chick)
ChickWeight[ChickWeight$Chick==,]
mean(c(chick$weight.4, 3000))/mean(chick$weight.4)
median(c(chick$weight.4, 3000))/median(chick$weight.4)
sd(c(chick$weight.4, 3000))/sd(chick$weight.4)
cor(c(chick$weight.4,3000), c(chick$weight.21,3000)) / cor(chick$weight.4, chick$weight.21)
x<-subset(chick$weight.4,chick$Diet==1)
y<-subset(chick$weight.4,chick$Diet==4)
t.test(c(x,200),y)$p.value
t.test(x,y+10)$statistic-t.test(x,y+100)$statistic
par(mfrow=c(1,3))
boxplot(x,y)
boxplot(x,y+10)
boxplot(x,y+100)
library(UsingR)
library(UsingR)
?father.son
data1 <- father.son
head(data1)
plot(cars)
r xx <- matrix(c(3,2,1,5,4,2,-1,0,-5,2,5,0,1,-1,-5,1),4,4) bb <- c(10,5,7,4) ans.vec <- solve(xx,bb) paste("c is",ans.vec[3])
a <- matrix(1:12, nrow=4)
b <- matrix(1:15, nrow=3)
dim(a);dim(b)
library(UsingR)
?father.son
mean(father.son$sheight)
temp <- father.son[round(father.son$fheight)==71,]
mean(temp[,2])
X = matrix(1:1000,100,10)
X[25,3]
t <- 1:10
x <- cbind(t,2*t,3*t,4*t,5*t)
sum(x[7,])
matrix(1:60,20,3)
matrix(1:60,20,3,byrow=TRUE)
x=11:20;rbind(x,2*x,3*x)
matrix(1:60,20,3,byrow=TRUE)
x <- matrix(c(3,2,1,5,4,2,-1,0,-5,2,5,0,1,-1,-5,1),4,4)
y <- c(10,5,7,4)
solve(x,y)
a <- matrix(1:12, nrow=4)
b <- matrix(1:15, nrow=3)
a%*%b
X <- matrix(c(1,1,1,1,0,0,1,1),nrow=4)
rownames(X) <- c("a","a","b","b")
beta <- c(5, 2)
X%*%beta
X <- matrix(c(1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1),nrow=6)
rownames(X) <- c("a","a","b","b","c","c")
beta <- c(10,3,-3)
X%*%beta
X%*%beta
X <- matrix(c(1,1,1,1,0,0,1,1),nrow=4)
rownames(X) <- c("a","a","b","b")
beta <- c(5, 2)
X%*%beta
a <- matrix(1:12, nrow=4)
b <- matrix(1:15, nrow=3)
a%*%b
X <- matrix(c(1,1,1,1,0,0,1,1),nrow=4)
rownames(X) <- c("a","a","b","b")
beta <- c(5, 2)
X%*%beta
X <- matrix(c(1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1),nrow=6)
rownames(X) <- c("a","a","b","b","c","c")
beta <- c(10,3,-3)
X%*%beta
sum
X <- matrix(c(1,1,1,1,0,0,1,1),nrow=4)
rownames(X) <- c("a","a","b","b")
beta <- c(3, 2)
X%*%beta
a <- matrix(1:12, nrow=4)
b <- matrix(1:15, nrow=3)
a%*%b
X <- matrix(c(1,1,1,1,0,0,1,1),nrow=4)
rownames(X) <- c("a","a","b","b")
beta <- c(5, 2)
X%*%beta
sum = X%*%beta
sum(sum)
a <- matrix(1:12, nrow=4)
b <- matrix(1:15, nrow=3)
a%*%b
sum = a%*%b
sum(sum)
X <- matrix(c(1,1,1,1,0,0,1,1),nrow=4)
rownames(X) <- c("a","a","b","b")
beta <- c(5, 2)
X%*%beta
X <- matrix(c(1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1),nrow=6)
rownames(X) <- c("a","a","b","b","c","c")
beta <- c(10,3,-3)
X%*%beta
g = 9.8 ## meters per second
h0 = 56.67
v0 = 0
n = 25
tt = seq(0,3.4,len=n) ##time in secs, t is a base function
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
-2 * (A %*% y) [3]
temp <- replicate(100000,-2 * (A %*% (h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1))) [3] )
sd(temp)/sqrt(100000)
temp <- replicate(100000,-2 * (A %*% (h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1))) [3] )
sd(temp)
library(UsingR)
x = father.son$fheight
y = father.son$sheight
n = length(y)
N = 50
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat = lm(y~x)$coef
betahats <- replicate(10000,{
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat = lm(y~x)$coef
return(betahat[2])
})
sd(betahats)
mean((x - mean(x))*(y-mean(y)))
mean((x - mean(x))*(y-mean(y)))
y = h0 + v0*tt - 0.5*g*tt^2 + rnorm(n,sd=1)
var(y)
y = h0 + v0*tt - 0.5*g*tt^2 + rnorm(n,sd=1)
var(y)
fit = lm(y ~ x)
y = h0 + v0*tt - 0.5*g*tt^2 + rnorm(n,sd=1)
sd(betahats)
mean((x - mean(x))*(y-mean(y)))
mean((x - mean(x))*(y-mean(y)))
y = h0 + v0*tt - 0.5*g*tt^2 + rnorm(n,sd=1)
var(y)
fit = lm(y ~ x)
sigma2 = sum((y-fit$fitted.values)^2) / 48
X = cbind(rep(1,N), x)
sqrt(sigma2*diag(solve(t(X)%*%X)))
summary(fit)
nx = 5
ny = 7
X = cbind(rep(1,nx + ny),rep(c(0,1),c(nx, ny)))
t(X)%*%X
library(contrast)
y = rnorm(4)
fit = lm(y ~ species + condition)
contrast(fit, list(species="B",condition="control"), list(species="A",condition="treated"))$X
library(UsingR)
species <- factor(c("A","A","B","B"))
condition <- factor(c("control","treated","control","treated"))
model.matrix(~ species + condition)
library(contrast)
y = rnorm(4)
fit = lm(y ~ species + condition)
library(Contrast)
library(contrast)
library(contrast)
y = rnorm(4)
fit = lm(y ~ species + condition)
library(UsingR)
y = h0 + v0*tt - 0.5*g*tt^2 + rnorm(n,sd=1)
species <- factor(c("A","A","B","B"))
condition <- factor(c("control","treated","control","treated"))
model.matrix(~ species + condition)
library(contrast)
y = rnorm(4)
fit = lm(y ~ species + condition)
contrast(fit, list(species="B",condition="control"), list(species="A",condition="treated"))$X
contrast(fit, list(species="B",condition="control"), list(species="A",condition="treated"))$X
library(contrast)
source('~/r_data/PH525.2x Matrix Algebra and Linear Models.R')
spider <- read.csv('data/spider_wolff_gorb_2013.csv',skip = 1)
spider <- read.csv('data/spider_wolff_gorb_2013.csv',skip = 1)
spider <- read.csv('spider_wolff_gorb_2013.csv',skip = 1)
spider <- read.csv('spider_wolff_gorb_2013.csv',skip = 1)
install.packages("contrast")
library(contrast)
y = rnorm(4)
fit = lm(y ~ species + condition)
library(UsingR)
y = h0 + v0*tt - 0.5*g*tt^2 + rnorm(n,sd=1)
spider <- read.csv('spider_wolff_gorb_2013.csv',skip = 1)
spider <- read.csv('spider_wolff_gorb_2013.csv',skip = 1)
setwd("~/r_data")
spider <- read.csv('spider_wolff_gorb_2013.csv',skip = 1)
fitTL <- lm(friction ~ type + leg, data=spider)
contrast(fitTL,list(leg="L4",type="pull"),list(leg="L2",type="pull"))
X <- model.matrix(~ type + leg, data=spider)
(Sigma <- sum(fitTL$residuals^2)/(nrow(X) - ncol(X)) * solve(t(X) %*% X))
Sigma[3,5]
C <- matrix(c(0,0,-1,0,1),1,5)
sqrt(C %*% Sigma %*% t(C))
spider$log2friction <- log2(spider$friction)
boxplot(log2friction ~ type*leg, data=spider)
fitX <- lm(log2friction ~ type + leg + type:leg, data=spider)
summary(fitX)
anova(fitX)
fitX <- lm(log2friction ~ type + leg + type:leg-1, data=spider)
summary(fitX)
contrast(fitX, list(type="pull",leg="L2"), list(type="pull",leg="L1"))
contrast(fitX, list(type="push",leg="L2"), list(type="push",leg="L1"))
summary(fitX)
N <- 40
p <- 4
group <- factor(rep(1:p,each=N/p))
X <- model.matrix(~ group)
Y <- rnorm(N,mean=42,7)
mu0 <- mean(Y)
initial.ss <- sum((Y - mu0)^2)
s <- split(Y, group)
after.group.ss <- sum(sapply(s, function(x) sum((x - mean(x))^2)))
(group.ss <- initial.ss - after.group.ss)
group.ms <- group.ss / (p - 1)
after.group.ms <- after.group.ss / (N - p)
f.value <- group.ms / after.group.ms
y <- replicate(1000,{
Y <- rnorm(N,mean=42,7)
mu0 <- mean(Y)
initial.ss <- sum((Y - mu0)^2)
s <- split(Y, group)
after.group.ss <- sum(sapply(s, function(x) sum((x - mean(x))^2)))
group.ss <- initial.ss - after.group.ss
group.ms <- group.ss / (p - 1)
after.group.ms <- after.group.ss / (N - p)
f.value <- group.ms / after.group.ms
return(f.value)
})
y <- replicate(1000,{
Y <- rnorm(N,mean=42,7)
mu0 <- mean(Y)
initial.ss <- sum((Y - mu0)^2)
s <- split(Y, group)
after.group.ss <- sum(sapply(s, function(x) sum((x - mean(x))^2)))
group.ss <- initial.ss - after.group.ss
group.ms <- group.ss / (p - 1)
after.group.ms <- after.group.ss / (N - p)
f.value <- group.ms / after.group.ms
return(f.value)
})
y <- replicate(1000,{
Y <- rnorm(N,mean=42,7)
mu0 <- mean(Y)
initial.ss <- sum((Y - mu0)^2)
s <- split(Y, group)
after.group.ss <- sum(sapply(s, function(x) sum((x - mean(x))^2)))
group.ss <- initial.ss - after.group.ss
group.ms <- group.ss / (p - 1)
after.group.ms <- after.group.ss / (N - p)
f.value <- group.ms / after.group.ms
return(f.value)
})
N <- 40
p <- 4
group <- factor(rep(1:p,each=N/p))
X <- model.matrix(~ group)
Y <- rnorm(N,mean=42,7)
mu0 <- mean(Y)
initial.ss <- sum((Y - mu0)^2)
s <- split(Y, group)
after.group.ss <- sum(sapply(s, function(x) sum((x - mean(x))^2)))
(group.ss <- initial.ss - after.group.ss)
group.ms <- group.ss / (p - 1)
after.group.ms <- after.group.ss / (N - p)
f.value <- group.ms / after.group.ms
y <- replicate(1000,{
Y <- rnorm(N,mean=42,7)
mu0 <- mean(Y)
initial.ss <- sum((Y - mu0)^2)
s <- split(Y, group)
after.group.ss <- sum(sapply(s, function(x) sum((x - mean(x))^2)))
group.ss <- initial.ss - after.group.ss
group.ms <- group.ss / (p - 1)
after.group.ms <- after.group.ss / (N - p)
f.value <- group.ms / after.group.ms
return(f.value)
})
y
f.value
mean(f.value)
hist(y, col="grey", border="white", breaks=50, freq=FALSE)
xs <- seq(from=0,to=6,length=100)
lines(xs, df(xs, df1 = p - 1, df2 = N - p), col="red")
y <- replicate(1000,{
Y <- rnorm(N,mean=42,7)
mu0 <- mean(Y)
initial.ss <- sum((Y - mu0)^2)
s <- split(Y, group)
after.group.ss <- sum(sapply(s, function(x) sum((x - mean(x))^2)))
group.ss <- initial.ss - after.group.ss
group.ms <- group.ss / (p - 1)
after.group.ms <- after.group.ss / (N - p)
f.value <- group.ms / after.group.ms
return mean((f.value))
})
y <- replicate(1000,{
Y <- rnorm(N,mean=42,7)
mu0 <- mean(Y)
initial.ss <- sum((Y - mu0)^2)
s <- split(Y, group)
after.group.ss <- sum(sapply(s, function(x) sum((x - mean(x))^2)))
group.ss <- initial.ss - after.group.ss
group.ms <- group.ss / (p - 1)
after.group.ms <- after.group.ss / (N - p)
f.value <- group.ms / after.group.ms
return mean((f.value))
}))
y <- replicate(1000,{
Y <- rnorm(N,mean=42,7)
mu0 <- mean(Y)
initial.ss <- sum((Y - mu0)^2)
s <- split(Y, group)
after.group.ss <- sum(sapply(s, function(x) sum((x - mean(x))^2)))
group.ss <- initial.ss - after.group.ss
group.ms <- group.ss / (p - 1)
after.group.ms <- after.group.ss / (N - p)
f.value <- group.ms / after.group.ms
return(f.value)
})
y <- replicate(1000,{
Y <- rnorm(N,mean=42,7)
mu0 <- mean(Y)
initial.ss <- sum((Y - mu0)^2)
s <- split(Y, group)
after.group.ss <- sum(sapply(s, function(x) sum((x - mean(x))^2)))
group.ss <- initial.ss - after.group.ss
group.ms <- group.ss / (p - 1)
after.group.ms <- after.group.ss / (N - p)
f.value <- group.ms / after.group.ms
return(f.value)
})
mean(y)
species <- factor(c("A","A","B","B"))
condition <- factor(c("control","treated","control","treated"))
model.matrix(~ species + condition)
spider <- read.csv('spider_wolff_gorb_2013.csv',skip = 1)
fitTL <- lm(friction ~ type + leg, data=spider)
contrast(fitTL,list(leg="L4",type="pull"),list(leg="L2",type="pull"))
X <- model.matrix(~ type + leg, data=spider)
(Sigma <- sum(fitTL$residuals^2)/(nrow(X) - ncol(X)) * solve(t(X) %*% X))
Sigma[3,5]
C <- matrix(c(0,0,-1,0,1),1,5)
sqrt(C %*% Sigma %*% t(C))
spider$log2friction <- log2(spider$friction)
boxplot(log2friction ~ type*leg, data=spider)
sqrt(C %*% Sigma %*% t(C))
contrast(fitTL,list(leg="L4",type="pull"),list(leg="L2",type="pull"))
fitX <- lm(log2friction ~ type + leg + type:leg, data=spider)
summary(fitX)
anova(fitX)
fitX <- lm(log2friction ~ type + leg + type:leg-1, data=spider)
summary(fitX)
contrast(fitX, list(type="pull",leg="L2"), list(type="pull",leg="L1"))
contrast(fitX, list(type="push",leg="L2"), list(type="push",leg="L1"))
X <- model.matrix(~ type + leg, data=spider)
(Sigma <- sum(fitTL$residuals^2)/(nrow(X) - ncol(X)) * solve(t(X) %*% X))
X <- model.matrix(~ type + leg, data=spider)
(Sigma <- sum(fitTL$residuals^2)/(nrow(X) - ncol(X)) * solve(t(X) %*% X))
