Survey<-read.csv("SurveySp13.csv", header= true)
Survey<-read.csv("SurveySp13.csv", header = TRUE)
favstats(Survey$anxiety~Survey$misconduct_writing)
t.test(Survey$anxiety~Survey$misconduct_writing,var.equal=FALSE)
table(Survey$gender)
GenderTable<-table(Survey$gender)
prop.table(GenderTable)
table(Survey$gender,Survey$misconduct_writing)
Gender_MisconductTable<-table(Survey$gender,Survey$misconduct_writing)
prop.table(Gender_MisconductTable, margin=2)
chisq.test(Survey$gender,Survey$misconduct_writing,correct = F)
language summary(Survey$English)
table(Survey$English)
EnglishTable<-table(Survey$English)
prop.table(EnglishTable) #to create a proportion table for english and misconduct
table(Survey9$English,Survey$misconduct_writing)
English_MisconductTable<-table(Survey$English,Survey$misconduct_writing)
prop.table(English_MisconductTable, margin=2)
chisq.test(Survey$English,Survey$misconduct_writing,correct = F)
table(Survey$Greek)
GreekTable<-table(Survey$Greek)
prop.table(GreekTable)
table(Survey$Greek,Survey$misconduct_writing)
Greek_MisconductTable<-table(Survey$Greek,Survey$misconduct_writing)
prop.table(Greek_MisconductTable,margin = 2)
chisq.test(Survey$Greek,Survey$misconduct_writing,correct = F
favstats(Survey$anxiety~Survey$misconduct_writing)
Survey<-read.csv("SurveySp13.csv", header = TRUE)
favstats(Survey$anxiety~Survey$misconduct_writing)
SurveySP16 <- read.csv("SurveySP16.csv", header = TRUE)
Survey<-read.csv("SurveySP16.csv",na.strings="")
setwd("~/r-code/student-academic-misconduct-study")
Survey<-read.csv("SurveySP16.csv",na.strings="")
Survey$misconduct_writing<-factor(ifelse(Survey$Writing_A=="0 times" &
Survey$Writing_B=="0 times" & Survey$Writing_C=="0 times" &
Survey$Writing_D=="0 times" & Survey$Writing_E=="0 times" &
Survey$Writing_F=="0 times"& Survey$Writing_G=="0 times", "no", "yes"))
Survey=na.omit(Survey)
table(Survey$misconduct_writing)
Survey$GPA[Survey$GPA>4]<-NA
favstats(Survey$GPA)
Survey=na.omit(Survey)
favstats(Survey$GPA)
install.packages(c("fav", "stats"))
favstats(Survey$GPA)
install.packages("mosaic")
Survey<-read.csv("SurveySP16.csv",na.strings="")
Survey$misconduct_writing<-factor(ifelse(Survey$Writing_A=="0 times" &
Survey$Writing_B=="0 times" & Survey$Writing_C=="0 times" &
Survey$Writing_D=="0 times" & Survey$Writing_E=="0 times" &
Survey$Writing_F=="0 times"& Survey$Writing_G=="0 times", "no", "yes"))
Survey=na.omit(Survey)
table(Survey$misconduct_writing)
Survey$GPA[Survey$GPA>4]<-NA
Survey=na.omit(Survey)
favstats(Survey$GPA)
ibrary(mosaic)
library(mosaic)
favstats(Survey$GPA)
favstats(Survey$GPA~Survey$misconduct_writing)
t.test(Survey$GPA~Survey$misconduct_writing,var.equal=FALSE)
favstats(Survey$num_credithrs)
favstats(Survey$num_credithrs~Survey$misconduct_writing)
t.test(Survey$num_credithrs~Survey$misconduct_writing,var.equal=FALSE)
Survey$anxiety[Survey$anxiety>10]<-NA
Survey$anxiety[Survey$anxiety<1]<-NA
Survey=na.omit(Survey)
favstats(Survey$anxiety)
favstats(Survey$anxiety~Survey$misconduct_writing)
t.test(Survey$anxiety~Survey$misconduct_writing,var.equal=FALSE)
table(Survey$gender)
GenderTable<-table(Survey$gender)
prop.table(GenderTable)
table(Survey$gender,Survey$misconduct_writing)
Gender_MisconductTable<-table(Survey$gender,Survey$misconduct_writing)
prop.table(Gender_MisconductTable, margin=2)
chisq.test(Survey$gender,Survey$misconduct_writing,correct = F)
summary(Survey$English)
table(Survey$English)
EnglishTable<-table(Survey$English)
prop.table(EnglishTable)
table(Survey9$English,Survey$misconduct_writing)
table(Survey$English,Survey$misconduct_writing)
English_MisconductTable<-table(Survey$English,Survey$misconduct_writing)
prop.table(English_MisconductTable, margin=2)
chisq.test(Survey$English,Survey$misconduct_writing,correct = F)
GreekTable<-table(Survey$Greek)
table(Survey$Greek,Survey$misconduct_writing)
prop.table(GreekTable)
table(Survey$Greek,Survey$misconduct_writing)
Greek_MisconductTable<-table(Survey$Greek,Survey$misconduct_writing)
prop.table(Greek_MisconductTable,margin = 2)
setwd("~/r-code")
x <- 0:9
x[-5:-1]
[1] 5 6 7 8 9
load("~/Downloads/data.txt")
library(readr)
data <- read_csv("~/Downloads/data.txt")
View(data)
library(readr)
data <- read_csv("~/Downloads/data.txt")
View(data)
View(data)
summary(data)
fiftyresults <- list()
for(i in 1:10) {
coinTosses   <- cumsum(data(c(-1,1), 10, replace = TRUE))
fiftyresults[[i]] <- coinTosses[length(coinTosses)]
}
warnings()
coinflip <-unlist(data)
library(readr)
data <- read_csv("~/Downloads/data.txt")
summary(data)
length(data)
sum(data)
count_fields(data)
object.size(data)
objects(data)
library(readr)
data <- read_csv("~/Downloads/data.txt")
coinflip <-unlist(data)
coinflip10 = 1:10
Flip1Coin = function(n) sample(c("Heads", "Tails"), n, rep = T)
View(Flip1Coin)
View(Flip1Coin)
Flip1Coin(data)
CoinToss <- function(n)
{
# n is the number of coin tosses
rbinom(n,1,1/2)
}
CoinToss(10)
CoinToss(10)
CoinToss <- function(n)
{
# n is the number of coin tosses
rbinom(n,1,1/2)
}
CoinToss(10)
sum(coinflip[1:10])
View(data)
View(data)
sum(coinflip[1:50])
library(readr)
data <- read_csv("~/Downloads/data.txt")
coinflip <-unlist(data)
a <-sum(coinflip[1:10])
b <-sum(coinflip[1:50])
c <-sum(coinflip[1:150])
show(c)
CoinFlip = function(n) sample(0:1,n,rep=T)
CoinFlip(a)
CoinFlip(a)
CoinFlip = function(n) data(0:1,n,rep=T)
CoinFlip(a)
CoinFlip(a)
CoinFlip = function(n) data(0:1,n,rep=T)
CoinFlip(a)
library(readr)
data <- read_csv("~/Downloads/data.txt")
coinflip <-unlist(data)
a <-sum(coinflip[1:10])
show(a)
b <-sum(coinflip[1:50])
show(b)
c <-sum(coinflip[1:150])
show(c)
CoinFlip = function(n) data(0:1,n,rep=T)
CoinFlip(a)
CoinFlip(10)
CoinFlip = function(n) sample(0:1,n,rep=T)
CoinFlip(10)
CoinFlip(10)
CoinFlip(10)
CoinFlip(50)
CoinFlip(150)
aa <-CoinFlip(10)
bb <-CoinFlip(50)
cc <-CoinFlip(150)
hist(aa,breaks=c(-0.5,0.5,1.5), prob=T)
hist(bb,breaks=c(-0.5,0.5,1.5), prob=T)
hist(cc,breaks=c(-0.5,0.5,1.5), prob=T)
hist(aa,breaks=c(-0.5,0.5,1.5), prob=T)
hist(bb,breaks=c(-0.5,0.5,1.5), prob=T)
hist(cc,breaks=c(-0.5,0.5,1.5), prob=T)
hist(aa,breaks=c(0,0.5,1), prob=T)
hist(bb,breaks=c(0,0.5,1), prob=T)
hist(cc,breaks=c(0,0.5,1), prob=T)
hist(aa)
hist(aa)
hist(aa,breaks=c(0,0.5,1))
hist(bb,breaks=c(0,0.5,1), prob=T)
hist(cc,breaks=c(0,0.5,1), prob=T)
hist(aa,breaks=c(0,0.01,1), prob=T)
hist(bb,breaks=c(0,0.01,1), prob=T)
hist(cc,breaks=c(0,0.01,1), prob=T)
hist(aa,breaks=c(0,0.1,1), prob=T)
hist(bb,breaks=c(0,0.1,1), prob=T)
hist(aa,breaks=c(0,1), prob=T)
hist(bb,breaks=c(0,1), prob=T)
hist(cc,breaks=c(0,1), prob=T)
5
hist(aa,breaks=c(0,0.5,1), prob=T)
hist(bb,breaks=c(0,0.5,1), prob=T)
hist(cc,breaks=c(0,0.5,1), prob=T)
aa <-CoinFlip(10)
aa <-CoinFlip(10)
bb <-CoinFlip(50)
CoinFlip = function(n) sample(0:1,n,rep=F)
aa <-CoinFlip(10)
CoinFlip = function(n) sample(0:1,n,rep=T)
aa <-CoinFlip(10)
bb <-CoinFlip(50)
CoinFlip = function(n) sample(n,rep=T)
aa <-CoinFlip(10)
bb <-CoinFlip(50)
cc <-CoinFlip(150)
CoinFlip = function(n) sample(0:1,n,rep=T)
aa <-CoinFlip(10)
bb <-CoinFlip(50)
aa <-CoinFlip(10)
CoinFlip = function(n) sample(0:1,n)
aa <-CoinFlip(10)
bb <-CoinFlip(50)
cc <-CoinFlip(150)
hist(aa,breaks=c(0,0.5,1), prob=T)
hist(bb,breaks=c(0,0.5,1), prob=T)
hist(cc,breaks=c(0,0.5,1), prob=T)
library(readr)
data <- read_csv("~/Downloads/data.txt")
coinflip <-unlist(data)
a <-sum(coinflip[1:10])
show(a)
b <-sum(coinflip[1:50])
show(b)
c <-sum(coinflip[1:150])
show(c)
CoinFlip = function(n) sample(0:1,n)
aa <-CoinFlip(10)
bb <-CoinFlip(50)
cc <-CoinFlip(150)
library(readr)
data <- read_csv("~/Downloads/data.txt")
library(readr)
data <- read_csv("~/Downloads/data.txt")
coinflip <-unlist(data)
a <-sum(coinflip[1:10])
show(a)
b <-sum(coinflip[1:50])
show(b)
c <-sum(coinflip[1:150])
show(c)
CoinFlip = function(n) sample(0:1,n)
aa <-CoinFlip(10)
CoinFlip = function(n) sample(0:1,n, rep=F)
aa <-CoinFlip(10)
bb <-CoinFlip(50)
cc <-CoinFlip(150)
CoinFlip = function(n) sample(0:1,n, replace = T)
aa <-CoinFlip(10)
bb <-CoinFlip(50)
cc <-CoinFlip(150)
hist(aa,breaks=c(0,0.5,1), prob=T)
hist(bb,breaks=c(0,0.5,1), prob=T)
hist(cc,breaks=c(0,0.5,1), prob=T)
library(readr)
data <- read_csv("~/Downloads/data.txt")
coinflip <-unlist(data)
a <-sum(coinflip[1:10])
show(a)
b <-sum(coinflip[1:50])
show(b)
c <-sum(coinflip[1:150])
show(c)
CoinFlip = function(n) sample(0:1,n, replace = T)
aa <-CoinFlip(10)
bb <-CoinFlip(50)
cc <-CoinFlip(150)
hist(aa,breaks=c(0,0.5,1), prob=T)
hist(bb,breaks=c(0,0.5,1), prob=T)
hist(cc,breaks=c(0,0.5,1), prob=T)
likelihood = function(n,k,p) { bc = ?? r = bc*p^k*(1-p)^(n-k) }
likelihood = function(data, p) { n = length(data) k = sum(data) bc = ?? r = bc*p^k*(1-p)^(n-k) }
cointoss <- read_csv("~/Downloads/data.txt")
library(readr)
cointoss <- read_csv("~/Downloads/data.txt")
cointoss <-unlist(data)
a <-sum(cointoss[1:10])
show(a)
b <-sum(cointoss[1:50])
setwd("~/Downloads")
library(readr)
cointoss <- read_csv("~/Downloads/data.txt")
cointoss <-unlist(data)
a <-sum(cointoss[1:10])
cointoss <-unlist(data)
cointoss <- read_csv("~/Downloads/data.txt")
cointoss <-unlist(cointoss)
a <-sum(cointoss[1:10])
show(a)
b <-sum(cointoss[1:50])
show(b)
c <-sum(cointoss[1:150])
show(c)
likelihood = function(n,k,p) { bc = ?? r = bc*p^k*(1-p)^(n-k) }
p = seq(0,1,.001)
x = likelihood(data[1:10], p)
y = likelihood(data[1:50], p)
z = likelihood(data[1:150], p)
hist(x,breaks=c(0,0.5,1), prob=T)
hist(y,breaks=c(0,0.5,1), prob=T)
hist(z,breaks=c(0,0.5,1), prob=T)
library(readr)
cointoss <- read_csv("~/Downloads/data.txt")
cointoss <-unlist(cointoss)
a <-sum(cointoss[1:10])
show(a)
b <-sum(cointoss[1:50])
show(b)
c <-sum(cointoss[1:150])
show(c)
likelihood = function(n,k,p) { bc = ?? r = bc*p^k*(1-p)^(n-k) }
p = seq(0,1,.001)
x = likelihood(data[1:10], 3, p)
x = likelihood(cointoss[1:10], 3, p)
install.packages("likelihood")
install.packages("likelihood")
likelihood = function(n,k,p) { bc = ?? r = bc*p^k*(1-p)^(n-k) }
p = seq(0,1,.001)
x = likelihood(cointoss[1:10], 3, p)
y = likelihood(cointoss[1:50], 18, p)
z = likelihood(cointoss[1:150], 81, p)
likelihood
install.packages("likelihood")
library(RColorBrewer)
colors <- brewer.pal(6, "Set1")
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 100
n.heads = 5
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
heads = c(10, 25, 50, 75, 95)
for(i in 1:length(heads)){
n.heads = heads[i]
curve(lik, lwd = 2, col = colors[i+1], add = T)
}
legend("top", legend = c(5, heads), title = "Number of heads in 100 tosses",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
library(RColorBrewer)
colors <- brewer.pal(6, "Set1")
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 10
n.heads = 3
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
heads = c(3)
for(i in 1:length(heads)){
n.heads = heads[i]
curve(lik, lwd = 2, col = colors[i+1], add = T)
}
legend("top", legend = c(5, heads), title = "Number of heads in 10 tosses",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
legend("top", legend = c(1, heads), title = "Number of heads in 10 tosses",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
library(RColorBrewer)
colors <- brewer.pal(6, "Set1")
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 10
n.heads = 3
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
heads = c(3)
for(i in 1:length(heads)){
n.heads = heads[i]
curve(lik, lwd = 2, col = colors[i+1], add = T)
}
legend("top", legend = c(5, heads), title = "Number of heads in 10 tosses",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
library(RColorBrewer)
colors <- brewer.pal(6, "Set1")
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 10
n.heads = 3
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
heads = c(10)
for(i in 1:length(heads)){
n.heads = heads[i]
curve(lik, lwd = 2, col = colors[i+1], add = T)
}
legend("top", legend = c(5, heads), title = "Number of heads in 10 tosses",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 10
n.heads = 3
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", legend = c(5, heads), title = "Number of heads in 10 tosses",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
library(RColorBrewer)
colors <- brewer.pal(6, "Set1")
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 10
n.heads = 3
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
for(i in 1:length(heads)){
n.heads = heads[i]
curve(lik, lwd = 2, col = colors[i+1], add = T)
}
library(RColorBrewer)
colors <- brewer.pal(6, "Set1")
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 10
n.heads = 3
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", legend = c( n.heads), title = "Number of heads in 10 tosses",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
legend("top", ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", title = "Number of heads in 10 tosses",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
legend("top", legend = c( n.heads), title = "3 Heads 10 Tosses",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", legend = c( n.heads), title = "3 Heads",
ncol = 3, bty = "30", lwd = 2, seg.len = 1, col = colors)
legend("top", legend = c( n.heads), title = "3 Heads",
ncol = 3, lwd = 2, seg.len = 1, col = colors)
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", legend = c( n.heads), title = "3 Heads",
ncol = 3, lwd = 2, seg.len = 1, col = colors)
legend("top", legend = c( n.heads), title = "3 Heads",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
library(RColorBrewer)
colors <- brewer.pal(6, "Set1")
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 10
n.heads = 3
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", legend = c( n.heads), title = "3 Heads",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", legend = c(0), title = "3 Heads",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
colors <- brewer.pal(2, "Set1")
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 10
n.heads = 3
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", legend = c(0), title = "3 Heads",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 10
n.heads = 3
curve(lik, lwd = 2, col = colors[3], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", legend = c(0), title = "3 Heads",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
curve(lik, lwd = 2, col = colors[3], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", title = "3 Heads",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
curve(lik, lwd = 2, col = colors[3], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", legend , title = "3 Heads",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
curve(lik, lwd = 2, col = colors[3], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", legend = NULL , title = "3 Heads",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
curve(lik, lwd = 2, col = colors[3], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", legend = c() , title = "3 Heads",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
curve(lik, lwd = 2, col = colors[3], xlab = "p", ylab = "likelihood", bty = "l")
legend("top", legend = c(1) , title = "3 Heads",
ncol = 3, bty = "n", lwd = 2, seg.len = 1, col = colors)
b <-sum(cointoss[1:50])
show(b)
library(readr)
cointoss <- read_csv("~/Downloads/data.txt")
cointoss <-unlist(cointoss)
a <-sum(cointoss[1:10])
show(a)
b <-sum(cointoss[1:50])
show(b)
c <-sum(cointoss[1:150])
show(c)
library(readr)
cointoss <- read_csv("~/Downloads/data.txt")
cointoss <-unlist(cointoss)
a <-sum(cointoss[1:10])
show(a)
b <-sum(cointoss[1:50])
show(b)
c <-sum(cointoss[1:150])
show(c)
library(RColorBrewer)
colors <- brewer.pal(2, "Set1")
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 10
n.heads = 3
curve(lik, lwd = 2, col = colors[3], xlab = "p", ylab = "likelihood", bty = "l")
colors <- brewer.pal(2, "Set1")
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 50
n.heads = 18
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
colors <- brewer.pal(2, "Set1")
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 150
n.heads = 81
curve(lik, lwd = 2, col = colors[4], xlab = "p", ylab = "likelihood", bty = "l")
colors <- brewer.pal(2, "Set1")
lik <- function(p) dbinom(n.heads, n.tosses, p)
n.tosses = 150
n.heads = 81
curve(lik, lwd = 2, col = colors[1], xlab = "p", ylab = "likelihood", bty = "l")
