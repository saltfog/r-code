p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
<<<<<<< HEAD
args = list(var = dat$enrollment_months))
dat <- read.csv("2007 to now SI.csv")
mean(dat$gender = Male)
mean(dat$gender = "Male")
mean(dat$gender = 'Male')
mean(dat$gender)
count(dat$gender)
summary(dat)
age_clean <- as.integer
as.numeric(age_clean)
age_clean <- as.numeric()
library(ggplot2)
dat <- read.csv("2007 to now SI.csv",header=TRUE)
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
dat <- read.csv("2007 to now SI.csv")
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x = enrollment_months, fill=months_served))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months))
#2007 to 2015 12-13-15 Data Gender
dat <- read.csv("2007 to now SI.csv")
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x = enrollment_months, fill=gender))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months))
dat <- read.csv("2007 to now SI.csv")
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x = months_served, fill=enrollment_months))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$months_served))
p <- ggplot(dat, aes(x = months_served, fill=percent))
dat <- read.csv("2007 to now SI.csv")
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x = months_served, fill=percent))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$months_served))
#2007 to 2015 12-13-15 Data Gender
dat <- read.csv("2007 to now SI.csv")
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x = enrollment_months, fill=gender))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months))
data_2007 = read.csv("2007 to now SI.csv")
summary(data_2007)
# Set up the x y variables
enrolled <- (data_2007$enrollment_months)
served <- (data_2007$months_served)
ggplot(data=data_2007, aes(data_2007$enrollment_months)) +
geom_histogram(breaks=seq(0, 40, by =1),
col="black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "green", high = "red") +
geom_density(col=1) + labs(title="Histogram for Months Enrolled SFY07 to SFY15") + scale_x_continuous(breaks=seq(0,36,1)) +
scale_y_continuous(breaks=seq(0,25000,100)) +
labs(x="Months Enrolled", y="Child Count") +
geom_vline(aes(xintercept=mean(data_2007$enrollment_months, na.rm=T)),
color="blue", linetype="dashed", size=1)
=======
args = list(var = dat$Months.Enrolled))
install.packages("ggplot2")
>>>>>>> 1721d79233c2691bdf572d19509cc00b0f5e2ec5
dat <- read.csv("Tobit 2013.csv",header=TRUE)
summary(dat)
install.packages("ggplot2")
install.packages("ggplot2")
dat <- read.csv("http://www.ats.ucla.edu/stat/data/tobit.csv")
dat <- read.csv("Tobit 2013.csv",header=TRUE)
summary(dat)
install.packages("ggplot2")
library("ggplot2")
install.packages("ggplot2")
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 15) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
race = Race.Ethnicity = "Black or African American"
dat <- read.csv("Tobit 2013.csv",header=TRUE)
summary(dat)
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 15) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
race = Race.Ethnicity = "Black or African American"
# setup base plot
p <- ggplot(dat, aes(x =Months.Enrolled , fill=race))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
dat <- read.csv("Tobit 2013.csv",header=TRUE)
dat <- read.csv("2007 to now SI.csv",header=TRUE)
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
male = gender = "Male"
female = gender = "Female"
dat <- read.csv("2007 to now SI.csv",header=TRUE)
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
#slit gender
male = gender = "Male"
female = gender = "Female"
# setup base plot
p <- ggplot(dat, aes(x = dat$gender, fill=male))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months))
dat <- read.csv("Tobit 2013.csv",header=TRUE)
dat <- read.csv("Tobit 2013.csv",header=TRUE)
dat <- read.csv("2007 to now SI.csv.csv",header=TRUE)
dat <- read.csv("2007 to now SI.csv",header=TRUE)
summary(dat)
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 15) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
male = gender= "Male"
dat <- read.csv("2007 to now SI.csv",header=TRUE)
summary(dat)
library("ggplot2")
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 15) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
male = dat$gender = "Male"
female = dat$gender ="Female"
# setup base plot
p <- ggplot(dat, aes(x =Months.Enrolled , fill=race))
dat <- read.csv("2007 to now SI.csv",header=TRUE)
summary(dat)
library("ggplot2")
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 15) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
male = dat$gender = "Male"
female = dat$gender ="Female"
# setup base plot
p <- ggplot(dat, aes(x =Months.Enrolled , fill=male))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
dat <- read.csv("2007 to now SI.csv",header=TRUE)
summary(dat)
library("ggplot2")
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 15) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
male = dat$gender = "Male"
female = dat$gender ="Female"
# setup base plot
p <- ggplot(dat, aes(x =dat$enrollment_months , fill=dat$gender))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
male = dat$gender = "Male"
female = dat$gender ="Female"
# setup base plot
p <- ggplot(dat, aes(x =dat$enrollment_months , fill=male))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
dat <- read.csv("2007 to now SI.csv",header=TRUE)
summary(dat)
library("ggplot2")
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 15) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
gender = gender = "Black or African American"
dat <- read.csv("2007 to now SI.csv",header=TRUE)
summary(dat)
library("ggplot2")
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 15) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
race = Race.Ethnicity
# setup base plot
p <- ggplot(dat, aes(x =Months.Enrolled , fill=race))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
dat <- read.csv("2007 to now SI.csv",header=TRUE)
summary(dat)
library("ggplot2")
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 15) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
race = Race.Ethnicity = "White"
# setup base plot
p <- ggplot(dat, aes(x =Months.Enrolled , fill=race))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
data_2013=read.csv("SUCCESS Initiative Query SFY 13.csv",header=TRUE)
data_2013[is.na(data_2013)] <- 0
head(data_2013)
str(data_2013)
names(data_2013)
race <- split(data_2013, data_2013$Race)
data_2013[is.na(data_2013)] <- 0
allraces <- rbind(race$White,race$`All Other Races`)
white <- race$White
other <- race$`All Other Races`
par(mfrow=c(1,2))
hist(race$White$Percent, breaks=10,
col="lightblue",
labels=TRUE,
ylim=c(0, 1800),
xlab="",
ylab="Exited Children (White)",
main="")
axis(side=1, at=seq(0,100, 10))
#     text(50, 1600, "Average 86.76% / Min 0% / Max 100%",
#          cex = .8),
#     text(50, 1500, "Total Exited Children 3740",
#         cex = .8))
hist(race$`All Other Races`$Percent, breaks=10,
col="lightgreen",
xlab="",
ylab="Exited Children (All Other Races)",labels=TRUE,
main="")
axis(side=1, at=seq(0,100, 10))
mean(race$White$Percent)
mean(race$`All Other Races`$Percent)
race <- split(data_2013, data_2013$State.Exit.Reason)
data_2013[is.na(data_2013)] <- 0
#DDIV
data_2013=read.csv("2013_all_providers.csv",header=TRUE)
data_2013[is.na(data_2013)] <- 0
head(data_2013)
str(data_2013)
names(data_2013)
provider <- split(data_2013, data_2013$Provider)
data_2013[is.na(data_2013)] <- 0
hist(provider$DDIV$Percentage, breaks=10,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 900),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation in Early Intervention Services for Children Exiting in SFY13
DDIV",
xaxt='n')
axis(side=1, at=seq(0,100, 10),
text(50, 900, "Average 92.68% / Min 0% / Max 100%",
cex = .8))
text(50, 845, "Total Exited: 908",
cex = .8)
#Normal Distribution
mean(provider$DDIV$Percentage)
sd(provider$DDIV$Percentage)
min(provider$DDIV$Percentage)
max(provider$DDIV$Percentage)
data_2013=read.csv("07-15 tobit data.csv",header=TRUE)
data_2013[is.na(data_2013)] <- 0
head(data_2013)
str(data_2013)
names(data_2013)
provider <- split(data_2013, data_2013$Provider)
provider <- split(data_2013, data_2013$short_name)
data_2013[is.na(data_2013)] <- 0
hist(provider$DDIV$percen, breaks=10,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 10000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation in Early Intervention Services for Children Exiting in SFY13
DDIV",
xaxt='n')
axis(side=1, at=seq(0,100, 10),
text(50, 900, "Average 92.68% / Min 0% / Max 100%",
cex = .8))
text(50, 845, "Total Exited: 908",
cex = .8)
#Normal Distribution
mean(provider$DDIV$Percentage)
mean(provider$DDIV$percent)
sd(provider$DDIV$percent)
data_2013=read.csv("07-15 tobit data.csv",header=TRUE)
head(data_2013)
str(data_2013)
names(data_2013)
provider <- split(data_2013, data_2013$short_name)
hist(provider$DDIV$percen, breaks=10,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 4000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation in Early Intervention Services for Children Exiting in SFY13
DDIV",
xaxt='n')
axis(side=1, at=seq(0,100, 10),
text(50, 900, "Average 92.62% / Min 0% / Max 100%",
cex = .8))
data_2013=read.csv("07-15 tobit data.csv",header=TRUE)
head(data_2013)
str(data_2013)
names(data_2013)
provider <- split(data_2013, data_2013$short_name)
hist(provider$DDIV$percen, breaks=10,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 4000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation in Early Intervention Services for Children Exiting in SFY13
DDIV",
xaxt='n')
axis(side=1, at=seq(0,100, 10),
text(50, 3000, "Average 92.62% / Min 0% / Max 100%",
cex = .8))
text(50, 845, "Total Exited: 20744",
cex = .8)
text(50, 2500, "Total Exited: 20744",
cex = .8)
data_2013=read.csv("07-15 tobit data.csv",header=TRUE)
head(data_2013)
str(data_2013)
names(data_2013)
provider <- split(data_2013, data_2013$short_name)
hist(provider$DDIV$percen, breaks=10,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 4000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation in Early Intervention Services for Children Exiting in SFY13
DDIV",
xaxt='n')
axis(side=1, at=seq(0,100, 10),
text(50, 3000, "Average 92.62% / Min 0% / Max 100%",
cex = .8))
text(50, 2500, "Total Exited: 20744",
cex = .8)
count(provider$DDIV)
sum(provider$DDIV)
sum(provider$DDIV$gender)
data_2013=read.csv("07-15 tobit data.csv",header=TRUE)
head(data_2013)
str(data_2013)
names(data_2013)
provider <- split(data_2013, data_2013$short_name)
hist(provider$percent, breaks=10,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 4000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation in Early Intervention Services for Children Exiting in SFY13
State",
xaxt='n')
axis(side=1, at=seq(0,100, 10),
text(50, 3000, "Average 92.62% / Min 0% / Max 100%",
cex = .8))
text(50, 2500, "Total Exited: 20744",
cex = .8)
data_2013=read.csv("07-15 tobit data.csv",header=TRUE)
head(data_2013)
str(data_2013)
names(data_2013)
hist(provider$percent, breaks=10,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 4000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation in Early Intervention Services for Children Exiting in SFY13
State",
xaxt='n')
axis(side=1, at=seq(0,100, 10),
text(50, 3000, "Average 92.62% / Min 0% / Max 100%",
cex = .8))
text(50, 2500, "Total Exited: 20744",
cex = .8)
data_2013=read.csv("07-15 tobit data.csv",header=TRUE)
head(data_2013)
str(data_2013)
names(data_2013)
provider <- split(data_2013, data_2013$short_name)
hist(provider$percent, breaks=10,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 4000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation in Early Intervention Services for Children Exiting in SFY13
State",
xaxt='n')
axis(side=1, at=seq(0,100, 10),
text(50, 3000, "Average 92.62% / Min 0% / Max 100%",
cex = .8))
provider <- split(data_2013, data_2013$short_name)
hist(provider$San Juan, breaks=10,
provider <- split(data_2013, data_2013$short_name)
hist(provider$San Juan$percent, breaks=10,
