summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 15) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x = Race.Ethnicity, fill=Months.Enrolled))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
dat <- read.csv("Tobit 2013.csv",header=TRUE)
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 15) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x =Months.Enrolled , fill=Race.Ethnicity))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
p <- ggplot(dat, aes(x =Months.Enrolled , fill=Race.Ethnicity.White))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
p <- ggplot(dat, aes(x =Months.Enrolled , fill=Race.Ethnicity."White"))
View(dat)
View(dat)
p <- ggplot(dat, aes(x =Months.Enrolled , fill=Race.Ethnicity = "White"))
p <- ggplot(dat, aes(x =Months.Enrolled , fill=Race.Ethnicity = White))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
race = Race.Ethnicity = White
race = Race.Ethnicity = "White"
p <- ggplot(dat, aes(x =Months.Enrolled , fill=race))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
View(dat)
View(dat)
race = Race.Ethnicity = "Hispanic/Latino"
# setup base plot
p <- ggplot(dat, aes(x =Months.Enrolled , fill=race))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
race = Race.Ethnicity = "Black or African American"
# setup base plot
p <- ggplot(dat, aes(x =Months.Enrolled , fill=race))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=15) +
stat_function(fun = f, size = 1,
args = list(var = dat$Months.Enrolled))
data_2013=read.csv("2007 to now SI.csv",header=TRUE)
data_2013=read.csv("2007 to now SI.csv",header=TRUE)
dat <- read.csv("2007 to now SI.csv",header=TRUE)
head(data_2013)
head(dat)
dat <- read.csv("2007 to now SI.csv",header=TRUE)
head(dat)
str(dat)
names(dat)
hist(data_2013$percent, breaks=10,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 15000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation
in Early Intervention Services for
Children Exiting in SFY13")
hist(dat$primary_language, breaks=10,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 15000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation
in Early Intervention Services for
Children Exiting in SFY13")
hist(dat$months_served, breaks=10,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 15000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation
in Early Intervention Services for
Children Exiting in SFY13")
hist(dat$months_served, breaks=10,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 8000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation
in Early Intervention Services for
Children Exiting in SFY13")
axis(side=1, at=seq(0,100, 5),
hist(dat$months_served, breaks=1,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 8000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation
in Early Intervention Services for
Children Exiting in SFY13")
axis(side=1, at=seq(0,100, 5),
text(50, 2500, "Average 86.76% / Min 0% / Max 100%",
hist(dat$months_served, breaks=5,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 8000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation
in Early Intervention Services for
Children Exiting in SFY13")
axis(side=1, at=seq(0,100, 5),
text(50, 2500, "Average 86.76% / Min 0% / Max 100%",
cex = .8),
text(50, 2400, "Total Exited Children 3740",
cex = .8))
text(50, 285, "Total Exited: 501",
data(volcano)
voldf <- local({
data_2013=read.csv("SUCCESS Initiative Query SFY 13.csv",header=TRUE)
data_2013[is.na(data_2013)] <- 0
head(data_2013)
str(data_2013)
names(data_2013)
race <- split(data_2013, data_2013$Race)
data_2013[is.na(data_2013)] <- 0
allraces <- rbind(race$White,race$`All Other Races`)
white <- race$White
other <- race$`All Other Races`
par(mfrow=c(1,2))
hist(race$White$Percent, breaks=10,
col="lightblue",
labels=TRUE,
ylim=c(0, 1800),
xlab="",
ylab="Exited Children (White)",
main="")
axis(side=1, at=seq(0,100, 10))
#     text(50, 1600, "Average 86.76% / Min 0% / Max 100%",
#          cex = .8),
#     text(50, 1500, "Total Exited Children 3740",
#         cex = .8))
hist(race$`All Other Races`$Percent, breaks=10,
col="lightgreen",
xlab="",
ylab="Exited Children (All Other Races)",labels=TRUE,
main="")
axis(side=1, at=seq(0,100, 10))
mean(race$White$Percent)
mean(race$`All Other Races`$Percent)
data_2013=read.csv("SUCCESS Initiative Query SFY 13.csv",header=TRUE)
View(data_2013)
View(data_2013)
x <- read.csv("2007 to now SI.csv")
race <- h <- hist(x plot=FAlSE)
hcum <- h <- hist(x plot=FAlSE)
hcum <- h <- hist(x$race_ethnicity plot=FAlSE)
x <- read.csv("2007 to now SI.csv")
hcum <- h <- hist(x$race_ethnicity plot=FAlSE)
hcum <- h <- hist(x$percent plot=FAlSE)
x <- read.csv("2007 to now SI.csv")
hcum <- h <- hist(x$percent plot=FAlSE)
hcum <- h <- hist(x$percent, plot=FAlSE)
hcum <- h <- hist(x$percent, plot=FAlSE)
hcum <- h <- hist(x$percent)
hcum <- h <- hist(x$percent, plot=false)
hcum <- h <- hist(x$percent, plot=f)
hcum <- h <- hist(x$percent,)
x <- read.csv("2007 to now SI.csv")
hcum <- h <- hist(x$percent)
hcum$counts <- cumsum(hcum$counts)
plot(hcum, main="")
plot(h, add=T, col="grey")
x <- read.csv("2007 to now SI.csv")
hcum <- h <- hist(x$percent)
plot(h, add=T, col="grey")
d <- density(x)
d <- density(x$percent)
d <- density(x$percent)
lines(x = d$x, y = cumsum(d$y)/max(cumsum(d$y)) * length(x), lwd = 2)
d <- density(hcum$density)
lines(x = d$x, y = cumsum(d$y)/max(cumsum(d$y)) * length(x), lwd = 2)
lines(x = d$x, y = cumsum(d$y)/max(cumsum(d$y)) * length(x), lwd = 2)
## Make some sample data
x <- sample(0:30, 200, replace=T, prob=15 - abs(15 - 0:30))
## Calculate and plot the two histograms
hcum <- h <- hist(x, plot=FALSE)
hcum$counts <- cumsum(hcum$counts)
plot(hcum, main="")
plot(h, add=T, col="grey")
## Plot the density and cumulative density
d <- density(x)
lines(x = d$x, y = d$y * length(x) * diff(h$breaks)[1], lwd = 2)
lines(x = d$x, y = cumsum(d$y)/max(cumsum(d$y)) * length(x), lwd = 2)
x <- sample(0:30, 200, replace=T, prob=15 - abs(15 - 0:30))
## Calculate and plot the two histograms
hcum <- h <- hist(x, plot=FALSE)
hcum$counts <- cumsum(hcum$counts)
plot(hcum, main="")
plot(h, add=T, col="grey")
## Plot the density and cumulative density
d <- density(x)
lines(x = d$x, y = cumsum(d$y)/max(cumsum(d$y)) * length(x), lwd = 2)
hcum <- h <- hist(x, plot=FALSE)
hcum$counts <- cumsum(hcum$counts)
plot(hcum, main="")
## Plot the density and cumulative density
d <- density(x)
lines(x = d$x, y = cumsum(d$y)/max(cumsum(d$y)) * length(x), lwd = 2)
lines(x = d$x, y = cumsum(d$y)/max(cumsum(d$y)) * length(x), lwd = 2)
lines(x = d$x, y = d$y * length(x) * diff(h$breaks)[1], lwd = 2)
data_2013=read.csv("SUCCESS Initiative Query SFY 13.csv",header=TRUE)
data_2013[is.na(data_2013)] <- 0
head(data_2013)
str(data_2013)
names(data_2013)
race <- split(data_2013, data_2013$Race)
data_2013[is.na(data_2013)] <- 0
allraces <- rbind(race$White,race$`All Other Races`)
white <- race$White
other <- race$`All Other Races`
par(mfrow=c(1,2))
hist(race$White$Percent, breaks=10,
col="lightblue",
labels=TRUE,
ylim=c(0, 1800),
xlab="",
ylab="Exited Children (White)",
main="")
dat <- read.csv("2007 to now SI.csv",header=TRUE)
head(dat)
str(dat)
names(dat)
hist(dat$months_served, breaks=5,
#probability = TRUE,
col="lightblue",
labels=TRUE,
ylim=c(0, 8000),
xlab="Months Served by Months Enrolled (percent)",
ylab="Exited Children",
main="Engaged Participation
in Early Intervention Services for
Children Exiting in SFY13")
install.packages("ggplot2")
library(ggplot2)
library(sm)
# Read in the data
data_2013=read.csv("SUCCESS Initiative Query SFY 13.csv",header=TRUE)
mean(exitage)
mean(enrolled)
data_2007 = read.csv("2007 to now SI.csv")
data_2007 = read.csv("2007 to now SI.csv")
data_2007 = read.csv("2007 to now SI.csv")
summary(data_2007)
# Set up the x y variables
enrolled <- (data_2007$enrollment_months)
served <- (data_2007$months_served)
ggplot(data=data_2007, aes(data_2007$enrollment_months)) +
geom_histogram(breaks=seq(0, 40, by =1),
col="black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "green", high = "red") +
geom_density(col=1) + labs(title="Histogram for Months Enrolled SFY07 to SFY15") + scale_x_continuous(breaks=seq(0,36,1)) +
scale_y_continuous(breaks=seq(0,25000,100)) +
labs(x="Months Enrolled", y="Child Count")
geom_vline(aes(xintercept=mean(rating, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
geom_vline(aes(xintercept=mean(data_2007$enrollment_months),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
geom_vline(aes(xintercept=mean(data_2007$enrollment_months))   # Ignore NA values for mean
geom_vline(aes(xintercept=mean(data_2007$enrollment_months)   # Ignore NA values for mean
color="blue", linetype="dashed", size=1))
geom_vline(aes(xintercept=mean(data_2007$enrollment_months),
color="blue", linetype="dashed", size=1))
geom_vline(aes(xintercept=mean(data_2007$enrollment_months, na.rm=T)),
color="blue", linetype="dashed", size=1)
data_2007 = read.csv("2007 to now SI.csv")
summary(data_2007)
# Set up the x y variables
enrolled <- (data_2007$enrollment_months)
served <- (data_2007$months_served)
ggplot(data=data_2007, aes(data_2007$enrollment_months)) +
geom_histogram(breaks=seq(0, 40, by =1),
col="black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "green", high = "red") +
geom_density(col=1) + labs(title="Histogram for Months Enrolled SFY07 to SFY15") + scale_x_continuous(breaks=seq(0,36,1)) +
scale_y_continuous(breaks=seq(0,25000,100)) +
labs(x="Months Enrolled", y="Child Count") +
geom_vline(aes(xintercept=mean(data_2007$enrollment_months, na.rm=T)),
color="blue", linetype="dashed", size=1)
dat <- read.csv("2007 to now SI.csv",header=TRUE)
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x = dat$race_ethnicity, fill=short_name))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months))
#2007 to 2015 12-13-15 Data
dat <- read.csv("2007 to now SI.csv")
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x = enrollment_months, fill=short_name))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months))
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months)+
geom_vline(aes(xintercept=mean(data_2007$enrollment_months, na.rm=T)),
color="blue", linetype="dashed", size=1))
geom_vline(aes(xintercept=mean(dat$enrollment_months, na.rm=T)),
color="blue", linetype="dashed", size=1))
p <- ggplot(dat, aes(x = enrollment_months, fill=short_name))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months) +
geom_vline(aes(xintercept=mean(dat$enrollment_months, na.rm=T),
color="blue", linetype="dashed", size=1))
p <- ggplot(dat, aes(x = enrollment_months, fill=short_name))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months) +
geom_vline(aes(xintercept=mean(dat$enrollment_months, na.rm=T),
color="blue", linetype="dashed", size=1))
dat <- read.csv("2007 to now SI.csv")
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x = enrollment_months, fill=short_name))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months) +
geom_vline(aes(xintercept=mean(dat$enrollment_months, na.rm=T),
color="blue", linetype="dashed", size=1))
dat <- read.csv("2007 to now SI.csv")
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x = enrollment_months, fill=short_name))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months))
data_2007 = read.csv("2007 to now SI.csv")
summary(data_2007)
# Set up the x y variables
enrolled <- (data_2007$enrollment_months)
served <- (data_2007$months_served)
ggplot(data=data_2007, aes(data_2007$enrollment_months)) +
geom_histogram(breaks=seq(0, 40, by =1),
col="black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "green", high = "red") +
geom_density(col=1) + labs(title="Histogram for Months Enrolled SFY07 to SFY15") + scale_x_continuous(breaks=seq(0,36,1)) +
scale_y_continuous(breaks=seq(0,25000,100)) +
labs(x="Months Enrolled", y="Child Count") +
geom_vline(aes(xintercept=mean(data_2007$enrollment_months, na.rm=T)),
color="blue", linetype="dashed", size=1)
p <- ggplot(dat, aes(x = enrollment_months, fill=short_name) + col="black")
p <- ggplot(dat, aes(x = enrollment_months, fill=short_name,col="black"))
# histogram, coloured by proportion in different programs
dat <- read.csv("2007 to now SI.csv")
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x = enrollment_months, fill=short_name,col="black"))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months))
p <- ggplot(dat, aes(x = enrollment_months, fill=short_name))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months))
dat <- read.csv("2007 to now SI.csv")
summary(dat)
# function that gives the density of normal distribution
# for given mean and sd, scaled to be on a count metric
# for the histogram: count = density * sample size * bin width
f <- function(x, var, bw = 1) {
dnorm(x, mean = mean(var), sd(var)) * length(var)  * bw
}
# setup base plot
p <- ggplot(dat, aes(x = enrollment_months, fill=gender))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months))
data_2007 = read.csv("2007 to now SI.csv")
summary(data_2007)
# Set up the x y variables
enrolled <- (data_2007$enrollment_months)
served <- (data_2007$months_served)
ggplot(data=data_2007, aes(data_2007$enrollment_months)) +
geom_histogram(breaks=seq(0, 40, by =1),
col="black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "green", high = "red") +
geom_density(col=1) + labs(title="Histogram for Months Enrolled SFY07 to SFY15") + scale_x_continuous(breaks=seq(0,36,1)) +
scale_y_continuous(breaks=seq(0,25000,100)) +
labs(x="Months Enrolled", y="Child Count") +
geom_vline(aes(xintercept=mean(data_2007$enrollment_months, na.rm=T)),
color="blue", linetype="dashed", size=1)
# Set up the x y variables
enrolled <- (data_2007$enrollment_months)
served <- (data_2007$months_served)
ggplot(data=data_2007, aes(data_2007$enrollment_months)) +
geom_histogram(breaks=seq(0, 40, by =1),
col="black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "green", high = "red") +
geom_density(col=1) + labs(title="Histogram for Months Enrolled SFY07 to SFY15") + scale_x_continuous(breaks=seq(0,36,1)) +
scale_y_continuous(breaks=seq(0,25000,100)) +
labs(x="Months Enrolled", y="Child Count") +
geom_vline(aes(xintercept=mean(data_2007$gender, na.rm=T)),
color="blue", linetype="dashed", size=1)
# setup base plot
p <- ggplot(dat, aes(x = enrollment_months, fill=gender,percent))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months))
# setup base plot
p <- ggplot(dat, aes(x = enrollment_months, fill=gender))
# histogram, coloured by proportion in different programs
# with a normal distribution overlayed
p + stat_bin(binwidth=1) +
stat_function(fun = f, size = 1,
args = list(var = dat$enrollment_months))
dat <- read.csv("2007 to now SI.csv")
mean(dat$gender = Male)
mean(dat$gender = "Male")
mean(dat$gender = 'Male')
mean(dat$gender)
count(dat$gender)
summary(dat)
